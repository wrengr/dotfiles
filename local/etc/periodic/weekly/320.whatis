#!/bin/bash
# Must use Bash in order to safely source our ~/.bash_profile !
# Also, this script must be run as root, else it won't work!

# The built-in periodic whatis script seems to be somewhat buggy,
# so we do it ourselves. N.B., this doesn't entirely replace the
# old script, since we don't bother doing anything with locales.
# We may want to add that in the future.


# We source my Bash profile to make sure we get everything in my
# standard setup. We might want to factor out the part that sets
# up the MANPATH so as to avoid running all the rest of it.
#
# TODO: liberalize this to use $HOME or ~ rather than hard-coding it.
bash_profile='/Users/wren/.bash_profile'
# Guard against the file not existing (or not having read permissions).
[ ! -r "$bash_profile" ] && exit 2
# BUG: this complains about my `l.` functions not being valid identifiers!
. $bash_profile || exit 2


echo ''
echo 'Rebuilding whatis database (for real this time):'
# TODO: detect if we're not root and print a warning if we're not...

# The original uses MANPATH=`/usr/bin/manpath -q` rather than
# trusting the environment variable. What is the force of doing
# that? It drops a bunch of the stuf we set in .bash_profile, so
# how can we make .bash_profile update what manpath returns?
#
# BUG: despite this cleanup, `find` is complaining about ~/local/man
# not existing. I'm not sure if that's because of tilde-expansion not
# working or because it actually doesn't exist. Either way, we need
# to improve this cleaning to handle such things.
cleaned_manpath="`echo "$MANPATH" |
    sed 's/:/\n/g' |
    sort |
    uniq |
    grep -v '^$' |
    paste -s -d':' -`"
# TODO: use `sed -e :a -e 'N;s/\n/,/;ba'` (or perhaps with `ta` in
# lieu of `ba`) in lieu of the paste command? Or maybe use tr in
# lieu of paste?
#
# TODO: add this step between the grep and paste (or something like it):
#   while read line; do [ -d "$line" ] && echo "$line"; done |
# N.B., we'll need to do ~-expansion first, since [-d] doesn't...

# TODO: detect when being run as non-root, and print a better error message.
rc=0
/usr/libexec/makewhatis.local "$cleaned_manpath" || rc=3
exit $rc
