#!/bin/bash
# Print Vim &background value for the current OSX Light/Dark mode.
# wren gayle romano <wren@cpan.org>                 ~ 2024.01.28
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# FIXME: We'll need to figure out some way to adjust our script
# to somehow cache the results of the client-machine and then forward
# them across ssh so that the host-machine's vim can keep the right setting!

# TODO: Should we `set -e` or no?

# Get MacOS version info:
# HT: <https://superuser.com/a/75206> <https://superuser.com/a/1259034>
product_version=$(sw_vers -productVersion)
os_vers=( ${product_version//./ } )
os_vers_major="${os_vers[0]}"
os_vers_minor="${os_vers[1]}"
os_vers_patch="${os_vers[2]}"
os_vers_build=$(sw_vers -buildVersion)

# MacOS<10.14 doesn't have dark-mode.
if [[ ${os_vers_major} -lt 10 ]] || [[ ${os_vers_minor} -lt 14 ]]; then
  echo 'light'
  exit 0
fi

# We discard errors since this setting uses NIL as a legit value.
style=$(defaults read -g AppleInterfaceStyle 2>/dev/null)

# MacOS-10.15 adds `AppleInterfaceStyleSwitchesAutomatically` which
# when TRUE swaps the interpretation of NIL `AppleInterfaceStyle`.
# HT: <https://stackoverflow.com/a/57429660>
# TODO: Should check for TRUE, instead of checking for not-NIL...
if [[ ${os_vers_minor} -ge 15 ]] \
&& [[ ! -z $(defaults read -g AppleInterfaceStyleSwitchesAutomatically 2>/dev/null) ]]; then
    # Here, NIL=>dark and non-NIL=>light; though I'm not sure
    # that the non-NIL value actually is the string 'Light'...
    # TODO: Check on a newer system.
    if [[ -z "$style" ]]; then
        echo 'dark'
    else
        echo 'light'
    fi
    exit 0
fi

# Default path: for 10.14, and for 10.15 when NIL
# `AppleInterfaceStyleSwitchesAutomatically`.
#
# Here, NIL=>light and 'Dark'=>dark.
echo "${style:-light}" | tr '[:upper:]' '[:lower:]'
exit 0

# TODO: Also see this snippet regarding various other settings:
# <https://stackoverflow.com/a/58448816>


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# * For ways to access that setting from within Cocoa/Swift/etc, see:
#   <https://stackoverflow.com/q/25207077>
# * Supposedly, the default path should still work for the 'Auto' mode:
#   <https://stackoverflow.com/q/25207077#comment114300793_25214873>
# * If it doesn't then see the following about using KVO:
#   <https://www.jessesquires.com/blog/2020/01/08/observing-appearance-changes-on-ios-and-macos/>
#   <https://groups.google.com/g/wx-dev/c/1vXBqmsHBEw/m/5Zj6xkPyBgAJ>
#
#
# * And for generalizing this script to work for other OSes:
#   <https://github.com/weisJ/auto-dark-mode>
# (That project has a whole lot of boilerplate/packaging; the actual
# implementations are at:
# `macos/src/main/objcpp/DarkModeMacOS.mm`
# `windows/src/main/cpp/DarkModeWindows.cpp`
# And I'm not quite sure re `linux/gtk` and `linux/xdg`.)
# * Also see: <https://stackoverflow.com/q/65294987>
