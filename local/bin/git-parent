#!/bin/bash
# Figure out the parent of a git branch
# wren gayle romano <wrengr@cpan.org>               ~ 2024-04-14
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# N.B., by naming this as we have and having it on our path, this
# script will be automagically run if someone says `git parent`;
# no aliases required!

_error() { >&2 printf "\e[1;31m${0##*/}:\e[0m \e[1m$*\e[0m\n"; }

# TODO: Add a flag to toggle color for the error message...
# TODO: add a flag/mode for printing out all the ancestors in order; so that clients needn't worry about running this script recursively (also so we can improve performance over the naive recursive approach)
# Cf the symbolic-demo alias at <https://github.com/ddopson/dotfiles/blob/master/.gitconfig>
if [[ $# -eq 0 ]]; then
    # TODO: Need to ensure we're actually in a git repo first!
    CHILD=$(git rev-parse --abbrev-ref HEAD)
elif [[ $# -eq 1 ]]; then
    CHILD="$1"
    # See also: <https://wincent.com/wiki/Legal_Git_branch_names>
    if ! git show-ref --quiet --verify -- "refs/heads/$CHILD"; then
        _error "Not a valid branch: $CHILD"
        exit 2
    fi
else
    >&2 cat << __END_USAGE__
Usage: ${0##*/} [CHILD_REFNAME]

Returns the short refname of the child's parent branch. If no child is
specified, defaults to HEAD. If there is no such child, the child has
no parent, or the parent is gone, then throws an error.
__END_USAGE__
    exit 1
fi
readonly CHILD

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# TODO: if the parent branch isn't local (i.e., is a "origin/foo"),
# need to error then too (or try to decern the local ancestor instead)
readonly FORMAT='%(if:equals=gone)%(upstream:track,nobracket)%(then)%(else)%(upstream:short)%(end)'
readonly PARENT=$(git for-each-ref --format="$FORMAT" refs/heads/"$CHILD")
if [[ $PARENT = '' ]]; then
    # TODO: more specific error message for when the parent is gone?
    _error "Couldn't find a parent of $CHILD"
    exit 3
fi
echo "$PARENT"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ fin.
exit 0
