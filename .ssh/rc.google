# wren gayle romano's Google corp ~/.ssh/rc         ~ 2024-02-16
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# N.B., despite being a config file for working in the seekrit
# confines of Google Corp, nothing in this file should actually be
# sensitive.  It is visible in <https://github.com/wrengr/dotfiles>
# for the express purpose of helping folks see examples of how to
# set up their own ~/.ssh/rc
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Sometimes you'll want your client-side ~/.ssh/config to do some exec
# command to run stuff before actually doing the ssh part.  This host-side
# file gives the analogous component for running some commands after the
# ssh part.  However, there are a few important things to beware of.
#
# First, this script is parsed/run by either Bourne or Dash (depending on
# your system), not by Bash.  Therefore, don't use Bash-isms like the nice
# `[[...]]` for testing!
# <http://wiki.bash-hackers.org/commands/classictest>
# <https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html>
#
# Second, this script must not emit anything on stdout. (Only on stderr.)
# <https://man.openbsd.org/sshd#SSHRC>
#
# Third, if the ~/.ssh/rc file exists, then before doing anything else
# we must make sure to source the global sshrc, because the ssh program
# will no longer do so automatically for us.  This step is necessary to
# ensure that xauth (etc) are run correctly.
# <https://www.oreilly.com/library/view/ssh-the-secure/0596008953/ch08s04.html>
source /etc/ssh/sshrc

# Fourth, this script is invoked both for interactive sessions (i.e.,
# the usual ssh) and by remote commands (e.g., scp); therefore you must
# be sure to guard things to only run in the desired mode, just like
# for your usual shell's login scripts.  Note that this script is not
# invoked when the session is invoking a "subsystem" (e.g., sftp); nor
# under various circumstances that say to explicitly ignore the file:
# <https://superuser.com/a/1320194>
# <https://unix.stackexchange.com/q/657250>
#
# Usually the ~/.ssh/rc script only wants to do things for interactive
# sessions; so if the session is non-interactive, then we're done.
#
# NOTE: If `[ -t 0 ]` isn't working for your particular situation,
# then take a look at the other approaches discussed at:
# <https://unix.stackexchange.com/q/657250>
if [ ! -t 0 ]; then
  # WARNING: Some sources claim that this script is *sourced* rather than
  # *executed*; which if true would mean that we must be sure to use
  # `return` in lieu of `exit`: <https://stackoverflow.com/a/3666941>
  # However, at least for Google corp's configuration, if we try using
  # `return` here then we'll get an error due to the script not being
  # sourced per se.
  exit 0
fi

# Now run whatever commands you want for interactive sessions.
